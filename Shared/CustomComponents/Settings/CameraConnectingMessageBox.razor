@inject ITCPService tcpService
@inject ConfigurationService configurationService;

<div class="messageBoxBackground" @onclick="()=>buttonClose.InvokeAsync()" />

<div class="messageBox">
	<div class="container">
		<div class="headerPlace textHeader">
			Потеря соединения с камерой
		</div>

		<div class="textPlace textContent">
			@message
		</div>

		@if (String.Equals(configurationService.activeUser.role, "admin") || String.Equals(configurationService.activeUser.role, "student") ||
			String.Equals(configurationService.activeUser.role, "master"))
		{
			<div class="textPlace textContent">
				<div class="subContainer">
					<div class="textContent">
						IP камеры:
					</div>
					<div class="textContent">
						<input type="text" @bind=cameraIP />
					</div>
				</div>
			</div>


			<div class="textPlace textContent">
				<div class="subContainer">
					<div class="textContent">
						порт камеры:
					</div>
					<div class="textContent">
						<input type="number" @bind=cameraPort />
					</div>
				</div>
			</div>
		}

		<button class="buttonPlace btn btn-primary buttonUp customButton" @onclick="()=>TryToConnected()">
			Подключиться
		</button>

	</div>
</div>

@code {
	[Parameter] public EventCallback buttonClose { get; set; }

	private string cameraIP;
	private int cameraPort;
	private string message;

	protected override void OnInitialized()
	{
		message = "Проверьте подключение к камере и нажмите повторить или закройе это сообщение";
		configurationService.GetCameraIPandPort(out cameraIP, out cameraPort);
	}

	public async Task TryToConnected()
	{
		configurationService.CameraIP = cameraIP;
		configurationService.CameraPort = cameraPort;
		await configurationService.SaveCofigurationInJSONAsync();
		tcpService.ConnectToCamera();
		if(tcpService.BooleanCheckCameraStatus())
		{
			Task.Run(()=>tcpService.GetMessages());
			buttonClose.InvokeAsync();
		}
		else
		{
			message = "Не удаеться подключиться";
		}
	}
}
