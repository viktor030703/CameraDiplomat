<div class="flexTable">
	<div class="item">
		<div class="addWideBorderToCell cell"> Логин </div>
		<div class="addWideBorderToCell cell"> Пароль </div>
		<div class="addWideBorderToCell cell"> Роль </div>
		<div class="addWideBorderToCell cell"> Входил </div>
	</div>

	@foreach (User user in usersFromDb)
	{
		@if (user == userToAddBackgroung)
		{
			<div class="item addBackgroungToElement" @onclick="()=>selectedUser.InvokeAsync(user)">
				<div class="addNarrowBorderToCell cell"> @user.login </div>
				<div class="addNarrowBorderToCell cell"> @user.password </div>
				<div class="addNarrowBorderToCell cell"> @user.role </div>
				<div class="addNarrowBorderToCell cell"> @user.lastLoginData </div>
			</div>
		}
		else
		{
			<div class="itemToSelect" @onclick="()=>UserSelectSmb(user)">
				<div class="addNarrowBorderToCell cell"> @user.login </div>
				<div class="addNarrowBorderToCell cell"> @user.password </div>
				<div class="addNarrowBorderToCell cell"> @user.role </div>
				<div class="addNarrowBorderToCell cell"> @user.lastLoginData </div>
			</div>
		}
	}
</div>

@code {
	[Parameter] public List<User> usersFromDb { get; set; }
	[Parameter] public EventCallback<User> selectedUser { get; set; }

	private User userToAddBackgroung { get; set; }

	private async Task UserSelectSmb(User user)
	{
		userToAddBackgroung = user;
		await ReturnSelectedUser(user);
		StateHasChanged();
	}

	private async Task ReturnSelectedUser(User user)
	{
		await selectedUser.InvokeAsync(user);
	}
}
