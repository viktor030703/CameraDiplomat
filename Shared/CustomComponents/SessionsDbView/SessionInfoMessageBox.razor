<div class="messageBoxBackground" @onclick="buttonClose" />

<div class="messageBox successContainerShadows">
	<div class="container">
		<div class="headerPlace textHeader successTextShadows addBottomBorder">
			Данные сессии
		</div>

		@if (thereIsError)
		{
			<div class="textPlace textContent errorTextShadows">
				@message
			</div>
		}
		else
		{
			<div class="textContent textContent successTextShadows">
				@message
			</div>
		}

		<div class="textPlace textContent">
			<div class="subContainer">
				<div class="textContent">
					Добавил:
				</div>
				<div class="textContent">
					@userLogin
				</div>
			</div>
		</div>

		<div class="textPlace textContent">
			<div class="subContainer">
				<div class="textContent">
					Всего продукта:
				</div>
				<div class="textContent">
					@totalCount
				</div>
			</div>
		</div>

		<div class="textPlace textContent">
			<div class="subContainer">
				<div class="textContent">
					Всего брака:
				</div>
				<div class="textContent">
					@marriageCount
				</div>
			</div>
		</div>

		<div class="textPlace textContent">
			<div class="subContainer">
				<div class="textContent">
					Процент брака:
				</div>
				<div class="textContent">
					@marriagePercent
				</div>
			</div>
		</div>

		<div class="textPlace textContent">
			<div class="subContainer">
				<div class="textContent">
					Начали/закончили:
				</div>
				<div class="textContent textScroll">
					@time
				</div>
			</div>
		</div>

		<div class="textPlace">
			<button class="btn btn-primary buttonUp fullScale" @onclick="()=>buttonClose.InvokeAsync()">
				Закрыть
			</button>
		</div>

	</div>
</div>

@code {
	[Parameter] public EventCallback buttonClose { get; set; }
	[Parameter] public Session sessionToGetInfo { get; set; }


	private string userLogin { get; set; }
	private int totalCount { get; set; }
	private int marriageCount { get; set; }
	private string time { get; set; }
	private string marriagePercent { get; set; }

	private string message = "Данные загружены";
	private bool thereIsError = false;

	protected override void OnInitialized()
	{
		if (sessionToGetInfo != null)
		{
			userLogin = sessionToGetInfo.creatorsLogin;
			totalCount = sessionToGetInfo.TotalCount;
			marriageCount = sessionToGetInfo.MarriageCount;
			marriagePercent = sessionToGetInfo.MarriagePercent;
			time = sessionToGetInfo.Data;
		}
		else
		{
			message = "пользователь не выбран";
			thereIsError = true;
		}
	}
}

