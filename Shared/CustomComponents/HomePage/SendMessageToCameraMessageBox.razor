@inject ITCPService tcpService
@inject ConfigurationService configurationService

<div class="messageBoxBackground" @onclick="buttonClose" />

<div class="messageBox">
	<div class="container successContainerShadows">
		<div class="headerPlace textHeader addBottomBorder objectHeight successTextShadows">
			Отправка команды
		</div>

		<div class="subContainer objectHeight">
			<button class="btn btn-primary fullScale customButton" @onclick="ChangeHideCodesState">
				К1
			</button>

			<button class="btn btn-primary fullScale customButton" @onclick="ChangeHideCodesState">
				К2
			</button>

			<button class="btn btn-primary fullScale customButton" @onclick="ChangeHideCodesState">
				К3
			</button>
		</div>


		<div class="subContainer objectHeight">
			<button class="btn btn-primary fullScale customButton" @onclick="ChangeHideCodesState">
				К4
			</button>

			<button class="btn btn-primary fullScale customButton" @onclick="ChangeHideCodesState">
				К5
			</button>

			<button class="btn btn-primary fullScale customButton" @onclick="ChangeHideCodesState">
				К6
			</button>
		</div>


			<div class="textContent objectHeight addBottomBorder successBackground">
				Команда:
			</div>
			<div class="textContent objectHeight">
			<input type="text" class="fullScale" placeholder="messageToCamera" @bind=messageToCamera />
			</div>


	


		<div class="textContent objectHeight addBottomBorder successBackground">
			Статус отправки:
		</div>

		<div class="textContent  objectHeight textScroll">
			@messageToUser:
		</div>

		<div class="textContent objectHeight addBottomBorder successBackground">
			Получено от камеры:
		</div>

		<div class="textContent objectHeight textScroll">
			@messageFromCamera
		</div>


		<div class="subContainer objectHeight buttonUp">
			<button class="btn fullScale customButton" @onclick="()=>SendMessage(messageToCamera)">
				Отправить
			</button>

			<button class="btn fullScale customButton" @onclick="()=>buttonClose.InvokeAsync()">
				Закрыть
			</button>

			@if (HideCodes)
			{
				<button class="btn fullScale customButton" @onclick="ChangeHideCodesState">
					Все ответы
				</button>
			}
			else
			{
				<button class="btn fullScale customButton" @onclick="ChangeHideCodesState">
					Скрыть коды
				</button>
			}

		</div>

	</div>
</div>

@code {
	[Parameter] public EventCallback buttonClose { get; set; }

	private bool HideCodes = false;

	private string messageToUser;

	private string messageFromCamera;
	private string messageToCamera;

	protected override void OnInitialized()
	{
		tcpService.EventNewMessageGet += ShowNewMessage;
		messageToUser = "*Тут будет указан статус отправки*";
		messageFromCamera = "*Тут будет сообщение с камеры*";
		messageToCamera = "*Введите сюда сообщение для передачи*";
	}

	private async Task SendMessage(string message)
	{
		if (await tcpService.SendMessage(message))
		{
			messageToUser = DateTime.Now.ToString() + " успешно отправлено";
		}
		else
		{
			messageToUser = DateTime.Now.ToString() + " не удалось доставить";
		}
	}

	private void ShowNewMessage(string messageFromService)
	{
		if (HideCodes)
		{
			if (messageFromService.Split('<', '>').Count() != configurationService.PartsCodeIncludeAfterSplit)
			{
				messageFromCamera = messageFromService;
			}
		}
		else
		{
			messageFromCamera = messageFromService;
		}
	}

	private void ChangeHideCodesState()
	{
		HideCodes = !HideCodes;
		messageFromCamera = "";
	}

}
